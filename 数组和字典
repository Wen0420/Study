	1. 数组用“【】”表示，每一项用“，”隔开
    首先我们先定义一个普通数字类型数组 list_int  对象
    我们把list_int 输出一下。
    它输出出来的和写出了的格式是一样的

    如何获取某个值呢？ 可以用下标直接取值，例如我们取出第四项，注：数组下标从0 开始

    如果我们要修改某一个节点数据呢？可以通过下标直接赋值。

    因为Python 本身语言定义的方式问题， 在一个数组中可以存在多种对象格式。
    如何添加一个节点？可以用append() 函数对数组末尾进行追加

    如何取多个值？ Python
            (1) 取从3到6 的数据 list_int[2:5]
            (2) 如果需要间隔取值呢？list_int[2::3] #内容是【开始坐标：结束坐标：间隔数】， 如果从0开始“开始坐标可以不填”，list_int[::2]
               整个数组要间隔一位取值。
                如果到最后结束“结束坐标可以不填”list_int[1:6:2], 从第二项到第七项，每两位取值
    以上就是数组上最常用的内容

    元素输入：
        在需要对数组上某一指定位置进行插入一元素的话，可以使用insert(坐标，对象) 进行操作

    元素删除：
          删除元素的话只能通过坐标进行，使用del命令， 删除元素对象，例如： del list_int[1]

    元素索引：
           查询数组中一个值出现的坐标， 使用index进行查找， index（对象，开始坐标，结束坐标）。如果需要从右侧查找，开始坐标给赋值
            没有找到值的话会报异常。

    其他还有函数，不再一一举例说明。
        1 list.count(obj)
        统计某个元素在列表中出现的次数

        2 list.extend(seq)
        在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）

        3 list.pop(index=-11)
        移除列表中的某一个元素（默认最后一个元素），并且返回该元素的值

        4 list.remove(obj)
        移除列表中某个值的第一个匹配项

        5 list.reverse()
        反向列表中的元素

        6 list.sort(cmp=None, key=None, reverse=False)
        对原列表进行排序

以上就是本次数组的主要内容

2.字典
        字典是Python 另一个常用的数据管理方式，存储方式是以 key==>value格式存储，其中 key 和 value 用":"隔开。
        多元素使用","隔开。字典中key 和 value是以key为主，key不可重复。重复出现的话后面的值将覆盖前面的值。
        key 可以使用的对象是普通对象（简单对象），value 不限。

        字典增加的新的键值对和修改数据是dict[key]=XXX

        删除主键对象的操作是一样的 del dict[key]

        字典的取值方式右两种方式
            1）直接dict[key]进行操作，这种方式如果key不存在会抛异常
            2）dict.get函数取值。 dict.get(key,默认值) 默认值是在key不存在的时候使用的。

        dict.keys 是来取key集合
        dict.items 是来取对象集合




